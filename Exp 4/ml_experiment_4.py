# -*- coding: utf-8 -*-
"""ML EXPERIMENT 4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RqMzNKMmxvAcM3YTRp_oVCa97JTMMEA3
"""

# Importing libs
from sklearn.utils import shuffle
from sklearn.model_selection import train_test_split
import numpy as np
from sklearn.metrics import accuracy_score
from sklearn.svm import SVC

# iris data load
import pandas as pd
url = 'Iris.csv'
df = pd.read_csv(url)
df.head()

# preprocess data, delete unnecessary columns
df = df.drop(['SepalWidthCm', 'PetalWidthCm'], axis=1)

# Convert target labels to numerical values
Y = []
target = df['Species']
for val in target:
    if val == 'Iris-setosa':
        Y.append(-1)
    else:
        Y.append(1)
df = df.drop(['Species'], axis=1)
X = df.values.tolist()

# Shuffle, split data into training and test sets
X, Y = shuffle(X, Y)
x_train, x_test, y_train, y_test = train_test_split(X, Y, train_size=0.9)

# SVM using scikit learn
# !pip install scikit-learn
clf = SVC(kernel='linear')
clf.fit(x_train, y_train)

# 3d Visualization three features on species
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

feature1 = df.columns[0]
feature2 = df.columns[1]
feature3 = df.columns[2]

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')

# Scatter plot for 'Iris-setosa'
ax.scatter(df[feature1][np.array(target) == 'Iris-setosa'],
           df[feature2][np.array(target) == 'Iris-setosa'],
           df[feature3][np.array(target) == 'Iris-setosa'],
           c='b', marker='o', label='Iris-setosa')

# Scatter plot for 'Iris-versicolor'
ax.scatter(df[feature1][np.array(target) == 'Iris-versicolor'],
           df[feature2][np.array(target) == 'Iris-versicolor'],
           df[feature3][np.array(target) == 'Iris-versicolor'],
           c='r', marker='x', label='Iris-versicolor')

# Scatter plot for 'Iris-virginica'
ax.scatter(df[feature1][np.array(target) == 'Iris-virginica'],
           df[feature2][np.array(target) == 'Iris-virginica'],
           df[feature3][np.array(target) == 'Iris-virginica'],
           c='g', marker='s', label='Iris-virginica')

ax.set_xlabel(feature1)
ax.set_ylabel(feature2)
ax.set_zlabel(feature3)
plt.legend()
plt.title('SVM Data Visualization')
plt.show()

y_pred = clf.predict(x_test)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy of the SVM model:", accuracy)